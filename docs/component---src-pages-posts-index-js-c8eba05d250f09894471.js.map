{"version":3,"file":"component---src-pages-posts-index-js-c8eba05d250f09894471.js","mappings":"uJAkDA,IArCe,IAA8B,IAA7B,UAAEA,EAAS,SAAEC,GAAU,EAErC,MAAMC,GAAOC,EAAAA,EAAAA,IAAe,cAU5B,OACE,uBAAKC,UAAWC,EAAAA,IAEd,0BAAQD,UAAWE,EAAAA,IAAYJ,EAAKK,KAAKC,aAAaC,OAEtD,2BACE,sBAAIL,UAAWM,EAAAA,IACb,sBAAIN,UAAWO,EAAAA,IAAa,gBAAC,KAAI,CAACC,GAAG,IAAIR,UAAWS,EAAAA,IAAa,SACjE,sBAAIT,UAAWO,EAAAA,IAAa,gBAAC,KAAI,CAACC,GAAG,YAAYR,UAAWS,EAAAA,IAAa,aAEzE,sBAAIT,UAAWO,EAAAA,IAAa,gBAAC,KAAI,CAACC,GAAG,SAASR,UAAWS,EAAAA,IAAa,YAG1E,4BACE,sBAAIT,UAAWU,EAAAA,IAAUd,GACzB,gBAAC,KAAW,KACTC,IAKD,C,+CC3BV,IAhBY,IAAgB,IAAf,MAAEQ,GAAO,EACpB,MAAMP,GAAOC,EAAAA,EAAAA,IAAe,cAU5B,OACE,6BAAQM,EAAM,MAAIP,EAAKK,KAAKC,aAAaC,MAAc,C,4GCiC3DM,QAAQC,IAnBU,aAqBX,MAAMC,EAAO,IAAM,gBAAC,IAAG,CAACR,MAAM,kBAErC,UA/CiB,IAAe,IAAd,KAAEP,GAAM,EAExB,OACE,gBAAC,IAAM,CAACF,UAAU,iBAChB,yBAAG,iCAGDE,EAAKgB,OAAOC,MAAMC,KAAKC,GACrB,2BAASC,IAAKD,EAAKE,IACjB,0BACE,gBAAC,KAAI,CAACX,GAAE,SAAWS,EAAKG,YAAYC,MACjCJ,EAAKG,YAAYf,QAGtB,yBAAG,WAASY,EAAKG,YAAYE,MAC7B,yBAAIL,EAAKM,YAKR,C,wVCxBN,IAAIC,EAAkB,wCAClBC,EAAa,mCACbC,EAAc,oCAEdC,EAAO,6BACP1B,EAAY,kCAGZS,EAAU,gCACVH,EAAc,sCACdE,EAAc,sCACdH,EAAW,kCACXsB,EAAU,gCACV1B,EAAY,mCACZ2B,EAAa,mCACbC,EAAa,kC,8FCgBjB,MAAMC,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBC,GAC/B,MAAMC,EAAoB,aAAiBH,GAE3C,OAAO,WAAc,IAEO,mBAAfE,EACFA,EAAWC,GAGb,IAAIA,KAAsBD,IAChC,CAACC,EAAmBD,GACzB,CAGA,MAAME,EAAc,CAAC,EAQd,SAASC,GAAY,WAACH,EAAU,SAAEpC,EAAQ,qBAAEwC,IACjD,IAAIC,EAAgBN,EAAiBC,GAMrC,OAJII,IACFC,EAAgBL,GAAcE,GAGzB,gBACLJ,EAAWQ,SACX,CAACC,MAAOF,GACRzC,EAEJ,C","sources":["webpack://gatsby-md/./src/components/layout.js","webpack://gatsby-md/./src/components/seo.js","webpack://gatsby-md/./src/pages/posts/index.js","webpack://gatsby-md/./src/components/layout.module.css","webpack://gatsby-md/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import * as React from 'react'\r\nimport { MDXProvider } from \"@mdx-js/react\"\r\nimport { Link, useStaticQuery, graphql } from 'gatsby'\r\nimport {\r\n  container,\r\n  heading,\r\n  navLinks,\r\n  navLinkItem,\r\n  navLinkText,\r\n  siteTitle,\r\n  button\r\n} from './layout.module.css'\r\n\r\nconst Layout = ({ pageTitle, children }) => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <div className={container}>\r\n\r\n      <header className={siteTitle}>{data.site.siteMetadata.title}</header>\r\n\r\n      <nav>\r\n        <ul className={navLinks}>\r\n          <li className={navLinkItem}><Link to=\"/\" className={navLinkText}>Home</Link></li>\r\n          <li className={navLinkItem}><Link to=\"/projects\" className={navLinkText}>Projects</Link></li>\r\n          {/* <li className={navLinkItem}><Link to=\"/about\" className={navLinkText}>About</Link></li> */}\r\n          <li className={navLinkItem}><Link to=\"/posts\" className={navLinkText}>Posts</Link></li>\r\n        </ul>\r\n      </nav>\r\n      <main>\r\n        <h1 className={heading}>{pageTitle}</h1>\r\n        <MDXProvider>\r\n          {children}\r\n        </MDXProvider>\r\n\r\n      </main>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout","import * as React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\n\r\nconst Seo = ({ title }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <title>{title} | {data.site.siteMetadata.title}</title>\r\n  )\r\n}\r\n\r\nexport default Seo","import * as React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\nimport Layout from '../../components/layout'\r\nimport Seo from '../../components/seo'\r\n\r\nconst BlogPage = ({ data }) => {\r\n\r\n  return (\r\n    <Layout pageTitle=\"My Blog Posts\">\r\n      <p>My cool posts will go in here</p>\r\n\r\n      {\r\n        data.allMdx.nodes.map((node) => (\r\n          <article key={node.id}>\r\n            <h2>\r\n              <Link to={`/blog/${node.frontmatter.slug}`}>\r\n                {node.frontmatter.title}\r\n              </Link>\r\n            </h2>\r\n            <p>Posted: {node.frontmatter.date}</p>\r\n            <p>{node.excerpt}</p>\r\n          </article>\r\n        ))\r\n      }\r\n\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMdx(\r\n      sort: {frontmatter: {date: DESC}}\r\n      filter: {frontmatter: {tag: {eq: \"blog\"}}}\r\n    ) {\r\n      nodes {\r\n        frontmatter {\r\n          date(formatString: \"MMMM D, YYYY\")\r\n          title\r\n          slug\r\n        }\r\n        id\r\n        excerpt\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconsole.log(query)\r\n\r\nexport const Head = () => <Seo title=\"My Blog Posts\" />\r\n\r\nexport default BlogPage","// extracted by mini-css-extract-plugin\nexport var about_container = \"layout-module--about_container--1efc1\";\nexport var about_name = \"layout-module--about_name--c605f\";\nexport var about_title = \"layout-module--about_title--f933e\";\nexport var button = \"layout-module--button--36b8e\";\nexport var card = \"layout-module--card--af57b\";\nexport var container = \"layout-module--container--78b04\";\nexport var gatsbyImageWrapper = \"layout-module--gatsby-image-wrapper--c2f67\";\nexport var gatsbyImageWrapperConstrained = \"layout-module--gatsby-image-wrapper-constrained--781ef\";\nexport var heading = \"layout-module--heading--f158c\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinkText = \"layout-module--nav-link-text--69cda\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var profile = \"layout-module--profile--310f0\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";\nexport var socialIcon = \"layout-module--socialIcon--61fab\";\nexport var socialItem = \"layout-module--socialItem--a4feb\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["pageTitle","children","data","useStaticQuery","className","container","siteTitle","site","siteMetadata","title","navLinks","navLinkItem","to","navLinkText","heading","console","log","Head","allMdx","nodes","map","node","key","id","frontmatter","slug","date","excerpt","about_container","about_name","about_title","card","profile","socialIcon","socialItem","MDXContext","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}